name: Skpr Deploy

on:
  workflow_call:
    inputs:
      env:
        type: string
        required: true
        description: The Skpr environment to deploy to.
      package:
        default: true
        type: boolean
        description: Whether this deployment needs to be packaged.
      version:
        type: string
        description: The version to deploy
      version_from_env:
        type: string
        description: Get the version to deploy from the environment.
      suspend_cron:
        type: boolean
        default: false
        description: Pause Cron operations during the deployment.
      post_deploy:
        default: make deploy
        type: string
        description: The post deploy commands to run on the environment.
      runs_on:
        default: ubuntu-latest
        type: string
        description: The type of machine to run the job on.
    secrets:
      skpr_username:
        required: true
      skpr_password:
        required: true
    outputs:
      version:
        description: The version deployed
        value: ${{ jobs.deploy.outputs.version }}
      url:
        description: The URL of the environment
        value: ${{ jobs.deploy.outputs.url }}

env:
  SKPR_USERNAME: ${{ secrets.SKPR_USERNAME }}
  SKPR_PASSWORD: ${{ secrets.SKPR_PASSWORD }}
  GH_TOKEN: ${{ github.token }}

jobs:
  deploy:
    runs-on: ${{ inputs.runs_on }}
    environment:
      name: ${{ inputs.env }}
      url: ${{ steps.skpr-info.outputs.url }}
    concurrency: ${{ inputs.env }}
    outputs:
      version: ${{ steps.version.outputs.version }}
      url: ${{ steps.skpr-info.outputs.url }}
    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          show-progress: false
      - name: ✓ Check for Github CLI
        id: github-cli-check
        run: |
          if command -v gh 2>/dev/null; then
            echo "github_cli=true" >> "$GITHUB_OUTPUT"
          fi
      - name: ⚙️ Install Github CLI
        if: steps.github-cli-check.outputs.github_cli != 'true'
        uses: ksivamuthu/actions-setup-gh-cli@v2
      - name: ⚙️ Install Skpr CLI
        run: |
          wget -q https://packages.skpr.io/apt/packages.skpr.io.pub -O- | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/packages.skpr.io.pub > /dev/null
          echo "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/packages.skpr.io.pub] https://packages.skpr.io/apt stable main" | sudo tee -a /etc/apt/sources.list.d/skpr.list > /dev/null
          sudo apt update && sudo apt install skpr
      - name: 🔢 Get version
        id: version
        run: |
          if [ -n "${{ inputs.version }}" ]; then
            version=${{ inputs.version }}
            echo "::notice:: Using explicit version $version"
          elif [ -n "${{ inputs.version_from_env }}" ]; then
            version=$(skpr info ${{ inputs.version_from_env }} | jq -r ".Version")
            echo "::notice:: Using version $version from ${{ inputs.version_from_env }} env"
          elif [ "${{ github.ref_type}}" == "tag" ]; then
            version=${{ github.ref_name }}
            echo "::notice:: Using version $version from github.ref_name context"
          else
            version=$(git describe --tags --always)
            echo "::notice:: Using version $version from git describe"
          fi
          echo "version=$version" >> $GITHUB_OUTPUT
      - name: ℹ️ Info
        id: skpr-info
        shell: bash
        run: |
          domain=$(skpr info ${{ inputs.env }} | jq -r ".Ingress.Domain")
          url=https://$domain
          echo "url=$url" >> $GITHUB_OUTPUT
      - name: 📦 Package
        if: inputs.package
        run: skpr package ${{ steps.version.outputs.version }}
      - name: ⏸️ Suspend Cron
        if: inputs.suspend_cron
        run: skpr cron suspend ${{ inputs.env }} --wait
      - name: 🚀 Deploy
        run: skpr deploy ${{ inputs.env }} ${{ steps.version.outputs.version }}
      - name: ▶️ Resume Cron
        if: inputs.suspend_cron
        run: skpr cron resume ${{ inputs.env }}
      - name: 🧹 Post-deploy
        run: skpr exec ${{ inputs.env }} ${{ inputs.post_deploy }}
